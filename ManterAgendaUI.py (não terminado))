import streamlit as st
import pandas as pd
from view import View

class ManterServicoUI:
    def main():
        st.header("Cadastro de Agendas")
        tab1, tab2, tab3, tab4 = st.tabs(["Listar", "Inserir", "Atualizar", "Excluir"])
        with tab1:
            ManterAgendaUI.listar()
        with tab2:
            ManterAgendaUI.inserir()
        with tab3:
            ManterAgendaUI.atualizar()
        with tab4:
            ManterAgendaUI.excluir()
    def listar():
        servicos = View.servico_listar()
        dic = []
        for c in servicos:
            dic.append(c.__dict__)
        df = pd.DataFrame(dic)
        st.dataframe(df)   
    def inserir():
        data = st.text_input("Informe a data:")
        confirmado = st.number_input("Confirmado:")
        id_cliente = st.text_input("Id do cliente:")        
        id_servico = st.text_input("id do serviço")
        if st.button("Inserir"):
            View.servico_inserir(data, confirmado, id_cliente, id_servico)
    def atualizar():
        st.header("Atualizar")
        option = st.selectbox('Selecione o cliente que desejar atualizar',(View.agenda_listar()))
        Descrição = st.text_input("informe o novo nome")
        valor = st.text_input("informe o novo email")
        Duração = st.text_input("informe o novo Telefone")
        if st.button("Atualizar"):
            View.servico_atualizar(option.get_id(), Descrição, valor, Duração)
    def excluir():
            st.header("Excluir")
            agendas = View.agend
            option = st.selectbox(
                'Selecione o cliente que desejar exluir',
                (View.servico_listar()))
            if st.button("Excluir"): 
                st.write(option)
                if option is not None:
                    View.servico_excluir(option.get_id())
